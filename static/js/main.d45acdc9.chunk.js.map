{"version":3,"sources":["store/todoSlice.js","store/index.js","component/TodoItem.js","component/TodoList.js","component/InputField.js","App.js","index.js"],"names":["todoSlice","createSlice","name","initialState","todos","reducers","addTodo","state","action","push","id","Date","toISOString","text","payload","completed","removeTodo","filter","todo","toggleTodoComplete","toggledTodo","find","actions","configureStore","reducer","todoReducer","TodoItem","dispatch","useDispatch","type","checked","onChange","className","onClick","TodoList","useSelector","map","InputField","handleInput","handleSubmit","value","e","target","App","useState","setText","ReactDOM","render","StrictMode","store","document","getElementById"],"mappings":"2MAEMA,EAAYC,YAAY,CAC1BC,KAAM,QACNC,aAAc,CACVC,MAAO,IAEXC,SAAU,CACNC,QADM,SACEC,EAAOC,GAGXD,EAAMH,MAAMK,KAAK,CACbC,IAAI,IAAIC,MAAOC,cACfC,KAAML,EAAOM,QAAQD,KACrBE,WAAW,KAGnBC,WAVM,SAUKT,EAAOC,GACdD,EAAMH,MAAQG,EAAMH,MAAMa,QAAO,SAAAC,GAAI,OAAIA,EAAKR,KAAMF,EAAOM,QAAQJ,OAEvES,mBAbM,SAaaZ,EAAOC,GACtB,IAAMY,EAAcb,EAAMH,MAAMiB,MAAK,SAAAH,GAAI,OAAIA,EAAKR,KAAOF,EAAOM,QAAQJ,MACxEU,EAAYL,WAAaK,EAAYL,cAK1C,EAAoDf,EAAUsB,QAAtDhB,EAAR,EAAQA,QAASU,EAAjB,EAAiBA,WAAYG,EAA7B,EAA6BA,mBAErBnB,IAAf,QC1BeuB,cAAe,CAC1BC,QAAS,CACLpB,MAAOqB,K,mCCYAC,EAdE,SAAC,GAA4B,IAA1BhB,EAAyB,EAAzBA,GAAIG,EAAqB,EAArBA,KAAME,EAAe,EAAfA,UACpBY,EAAWC,cAEjB,OACI,+BACI,uBACIC,KAAK,WACLC,QAASf,EACTgB,SAAU,kBAAMJ,EAASR,EAAmB,CAAET,WAClD,+BAAOG,IACP,sBAAMmB,UAAU,SAASC,QAAS,kBAAMN,EAASX,EAAW,CAAEN,SAA9D,sBCIGwB,EAdE,WACb,IAAM9B,EAAQ+B,aAAY,SAAA5B,GAAK,OAAIA,EAAMH,MAAMA,SAC/C,OACI,6BAEQA,EAAMgC,KAAI,SAAAlB,GAAI,OACV,cAAC,EAAD,eAEQA,GADCA,EAAKR,UCFnB2B,EARI,SAAC,GAAwC,IAAvCxB,EAAsC,EAAtCA,KAAMyB,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACpC,OACI,kCACE,uBAAOC,MAAO3B,EAAMkB,SAAU,SAACU,GAAD,OAAOH,EAAYG,EAAEC,OAAOF,UAC1D,wBAAQP,QAASM,EAAjB,0BCsBKI,MAlBf,WAEE,MAAwBC,mBAAS,IAAjC,mBAAO/B,EAAP,KAAagC,EAAb,KACMlB,EAAWC,cAOf,OACE,sBAAKI,UAAU,gBAAf,UACE,cAAC,EAAD,CAAYnB,KAAMA,EAAMyB,YAAaO,EAASN,aAPpC,WACdZ,EAASrB,EAAQ,CAAEO,UACnBgC,EAAQ,OAMJ,cAAC,EAAD,QCbRC,IAASC,OACP,cAAC,IAAMC,WAAP,UACC,cAAC,IAAD,CAAUC,MAAOA,EAAjB,SACG,cAAC,EAAD,QAGJC,SAASC,eAAe,W","file":"static/js/main.d45acdc9.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\nconst todoSlice = createSlice({\r\n    name: 'todos',\r\n    initialState: {\r\n        todos: []\r\n    },\r\n    reducers: {\r\n        addTodo(state, action) {\r\n           \r\n\r\n            state.todos.push({\r\n                id: new Date().toISOString(),\r\n                text: action.payload.text,\r\n                completed: false,\r\n            });\r\n         },\r\n        removeTodo(state, action) {\r\n            state.todos = state.todos.filter(todo => todo.id !==action.payload.id)\r\n         },\r\n        toggleTodoComplete(state, action) {\r\n            const toggledTodo = state.todos.find(todo => todo.id === action.payload.id);\r\n            toggledTodo.completed = !toggledTodo.completed;\r\n        }\r\n     },\r\n});\r\n\r\nexport const { addTodo, removeTodo, toggleTodoComplete } = todoSlice.actions;\r\n\r\nexport default todoSlice.reducer;","import { configureStore } from '@reduxjs/toolkit';\r\nimport todoReducer from './todoSlice';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        todos: todoReducer,\r\n    },\r\n})","import { useDispatch } from 'react-redux';\r\nimport { removeTodo, toggleTodoComplete } from '../store/todoSlice';\r\n\r\nconst TodoItem = ({ id, text, completed}) => {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <li>\r\n            <input\r\n                type='checkbox'\r\n                checked={completed} \r\n                onChange={() => dispatch(toggleTodoComplete({ id }))}/>\r\n            <span>{text}</span>\r\n            <span className=\"delete\" onClick={() => dispatch(removeTodo({ id }))}>&times;</span>\r\n        </li>\r\n    )\r\n}\r\nexport default TodoItem","import { useSelector } from 'react-redux';\r\nimport TodoItem from './TodoItem';\r\n\r\nconst TodoList = () => {\r\n    const todos = useSelector(state => state.todos.todos);\r\n    return (\r\n        <ul>\r\n            {\r\n                todos.map(todo => (\r\n                    <TodoItem\r\n                        key={todo.id}                        \r\n                        {...todo}\r\n                    />\r\n                ))}\r\n        </ul>\r\n    )\r\n}\r\nexport default TodoList","const InputField = ({text, handleInput, handleSubmit }) => {\r\n    return (\r\n        <label>\r\n          <input value={text} onChange={(e) => handleInput(e.target.value)} />\r\n          <button onClick={handleSubmit}>Add Todo</button>\r\n        </label>\r\n    )\r\n}\r\nexport default InputField","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport {addTodo} from './store/todoSlice';\n\nimport TodoList from './component/TodoList';\nimport InputField from './component/InputField';\n\nfunction App() {\n \n  const [text, setText] = useState('');\n  const dispatch = useDispatch();\n\n  const addTask = () => {\n    dispatch(addTodo({ text }))\n    setText('');\n  };\n  \n    return (\n      <div className=\"container App\">\n        <InputField text={text} handleInput={setText} handleSubmit={addTask}/>\n        <TodoList  />\n      </div>\n    );\n  }\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport './index.css';\nimport 'normalize.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n   <Provider store={store}> \n      <App />\n     </Provider>   \n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}